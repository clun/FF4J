/*
 * FF4J (ff4j.org) WebAPI
 * Administrate and operate all tasks on your features through this api.
 *
 * OpenAPI spec version: 1.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.ff4j.store.client.model;

/*
 * #%L
 * ff4j-core
 * %%
 * Copyright (C) 2013 - 2017 FF4J
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.ff4j.store.client.model.InlineResponse200AuthorizationsManager;
import org.ff4j.store.client.model.InlineResponse200EventRepository;
import org.ff4j.store.client.model.InlineResponse200FeaturesStore;
import java.io.IOException;

/**
 * FF4jStatusApiBean
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-27T20:07:45.848Z")
public class FF4jStatusApiBean {
  @SerializedName("authorizationsManager")
  private InlineResponse200AuthorizationsManager authorizationsManager = null;

  @SerializedName("autocreate")
  private Boolean autocreate = null;

  @SerializedName("eventRepository")
  private InlineResponse200EventRepository eventRepository = null;

  @SerializedName("featuresStore")
  private InlineResponse200FeaturesStore featuresStore = null;

  @SerializedName("uptime")
  private String uptime = null;

  @SerializedName("version")
  private String version = null;

  public FF4jStatusApiBean authorizationsManager(InlineResponse200AuthorizationsManager authorizationsManager) {
    this.authorizationsManager = authorizationsManager;
    return this;
  }

   /**
   * Get authorizationsManager
   * @return authorizationsManager
  **/
  @ApiModelProperty(value = "")
  public InlineResponse200AuthorizationsManager getAuthorizationsManager() {
    return authorizationsManager;
  }

  public void setAuthorizationsManager(InlineResponse200AuthorizationsManager authorizationsManager) {
    this.authorizationsManager = authorizationsManager;
  }

  public FF4jStatusApiBean autocreate(Boolean autocreate) {
    this.autocreate = autocreate;
    return this;
  }

   /**
   * Get autocreate
   * @return autocreate
  **/
  @ApiModelProperty(value = "")
  public Boolean getAutocreate() {
    return autocreate;
  }

  public void setAutocreate(Boolean autocreate) {
    this.autocreate = autocreate;
  }

  public FF4jStatusApiBean eventRepository(InlineResponse200EventRepository eventRepository) {
    this.eventRepository = eventRepository;
    return this;
  }

   /**
   * Get eventRepository
   * @return eventRepository
  **/
  @ApiModelProperty(value = "")
  public InlineResponse200EventRepository getEventRepository() {
    return eventRepository;
  }

  public void setEventRepository(InlineResponse200EventRepository eventRepository) {
    this.eventRepository = eventRepository;
  }

  public FF4jStatusApiBean featuresStore(InlineResponse200FeaturesStore featuresStore) {
    this.featuresStore = featuresStore;
    return this;
  }

   /**
   * Get featuresStore
   * @return featuresStore
  **/
  @ApiModelProperty(value = "")
  public InlineResponse200FeaturesStore getFeaturesStore() {
    return featuresStore;
  }

  public void setFeaturesStore(InlineResponse200FeaturesStore featuresStore) {
    this.featuresStore = featuresStore;
  }

  public FF4jStatusApiBean uptime(String uptime) {
    this.uptime = uptime;
    return this;
  }

   /**
   * Get uptime
   * @return uptime
  **/
  @ApiModelProperty(value = "")
  public String getUptime() {
    return uptime;
  }

  public void setUptime(String uptime) {
    this.uptime = uptime;
  }

  public FF4jStatusApiBean version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FF4jStatusApiBean ff4jStatusApiBean = (FF4jStatusApiBean) o;
    return Objects.equals(this.authorizationsManager, ff4jStatusApiBean.authorizationsManager) &&
        Objects.equals(this.autocreate, ff4jStatusApiBean.autocreate) &&
        Objects.equals(this.eventRepository, ff4jStatusApiBean.eventRepository) &&
        Objects.equals(this.featuresStore, ff4jStatusApiBean.featuresStore) &&
        Objects.equals(this.uptime, ff4jStatusApiBean.uptime) &&
        Objects.equals(this.version, ff4jStatusApiBean.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizationsManager, autocreate, eventRepository, featuresStore, uptime, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FF4jStatusApiBean {\n");
    
    sb.append("    authorizationsManager: ").append(toIndentedString(authorizationsManager)).append("\n");
    sb.append("    autocreate: ").append(toIndentedString(autocreate)).append("\n");
    sb.append("    eventRepository: ").append(toIndentedString(eventRepository)).append("\n");
    sb.append("    featuresStore: ").append(toIndentedString(featuresStore)).append("\n");
    sb.append("    uptime: ").append(toIndentedString(uptime)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

